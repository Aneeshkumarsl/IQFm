ts --- file

import { Component, OnInit } from '@angular/core';

import { of, Observable } from 'rxjs';
import { tap, finalize, catchError } from 'rxjs/operators';

import { Router } from '@angular/router';
import { ReactiveFormsModule, FormsModule,FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';

import { ApiService } from '@app/core';
import { NgxSmartModalService } from 'ngx-smart-modal'


@Component({
    selector: 'app-home',
    templateUrl: './home.component.html',
    styleUrls: ['./home.component.scss']
})
export class HomeComponent implements OnInit {

    isLoading = false;
    error = null;

    public items: Array<any> = [
        {
          text: 'Austria',
          children: [
            { id: 54, text: 'Vienna' }
          ]
        },
        {
          text: 'Belgium',
          children: [
            { id: 2, text: 'Antwerp' },
            { id: 9, text: 'Brussels' }
          ]
        },
        {
          text: 'Bulgaria',
          children: [
            { id: 48, text: 'Sofia' }
          ]
        },
        {
          text: 'Croatia',
          children: [
            { id: 58, text: 'Zagreb' }
          ]
        },
        {
          text: 'Czech Republic',
          children: [
            { id: 42, text: 'Prague' }
          ]
        },
        {
          text: 'Denmark',
          children: [
            { id: 13, text: 'Copenhagen' }
          ]
        },
        {
          text: 'England',
          children: [
            { id: 6, text: 'Birmingham' },
            { id: 7, text: 'Bradford' },
            { id: 26, text: 'Leeds' },
            { id: 30, text: 'London' },
            { id: 34, text: 'Manchester' },
            { id: 47, text: 'Sheffield' }
          ]
        },
        {
          text: 'Finland',
          children: [
            { id: 25, text: 'Helsinki' }
          ]
        },
        {
          text: 'France',
          children: [
            { id: 35, text: 'Marseille' },
            { id: 40, text: 'Paris' }
          ]
        },
        {
          text: 'Germany',
          children: [
            { id: 5, text: 'Berlin' },
            { id: 8, text: 'Bremen' },
            { id: 12, text: 'Cologne' },
            { id: 14, text: 'Dortmund' },
            { id: 15, text: 'Dresden' },
            { id: 17, text: 'Düsseldorf' },
            { id: 18, text: 'Essen' },
            { id: 19, text: 'Frankfurt' },
            { id: 23, text: 'Hamburg' },
            { id: 24, text: 'Hannover' },
            { id: 27, text: 'Leipzig' },
            { id: 37, text: 'Munich' },
            { id: 50, text: 'Stuttgart' }
          ]
        },
        {
          text: 'Greece',
          children: [
            { id: 3, text: 'Athens' }
          ]
        },
        {
          text: 'Hungary',
          children: [
            { id: 11, text: 'Budapest' }
          ]
        },
        {
          text: 'Ireland',
          children: [
            { id: 16, text: 'Dublin' }
          ]
        },
        {
          text: 'Italy',
          children: [
            { id: 20, text: 'Genoa' },
            { id: 36, text: 'Milan' },
            { id: 38, text: 'Naples' },
            { id: 39, text: 'Palermo' },
            { id: 44, text: 'Rome' },
            { id: 52, text: 'Turin' }
          ]
        },
        {
          text: 'Latvia',
          children: [
            { id: 43, text: 'Riga' }
          ]
        },
        {
          text: 'Lithuania',
          children: [
            { id: 55, text: 'Vilnius' }
          ]
        },
        {
          text: 'Netherlands',
          children: [
            { id: 1, text: 'Amsterdam' },
            { id: 45, text: 'Rotterdam' },
            { id: 51, text: 'The Hague' }
          ]
        },
        {
          text: 'Poland',
          children: [
            { id: 29, text: 'Łódź' },
            { id: 31, text: 'Kraków' },
            { id: 41, text: 'Poznań' },
            { id: 56, text: 'Warsaw' },
            { id: 57, text: 'Wrocław' }
          ]
        },
        {
          text: 'Portugal',
          children: [
            { id: 28, text: 'Lisbon' }
          ]
        },
        {
          text: 'Romania',
          children: [
            { id: 10, text: 'Bucharest' }
          ]
        },
        {
          text: 'Scotland',
          children: [
            { id: 21, text: 'Glasgow' }
          ]
        },
        {
          text: 'Spain',
          children: [
            { id: 4, text: 'Barcelona' },
            { id: 32, text: 'Madrid' },
            { id: 33, text: 'Málaga' },
            { id: 46, text: 'Seville' },
            { id: 53, text: 'Valencia' },
            { id: 59, text: 'Zaragoza' }
          ]
        },
        {
          text: 'Sweden',
          children: [
            { id: 22, text: 'Gothenburg' },
            { id: 49, text: 'Stockholm' }
          ]
        }
      ];
      public value: any = {};
      public _disabledV: string = '0';
      public disabled: boolean = false;
    

    constructor(
        private apiService : ApiService,
        private router: Router,
        public modalService : NgxSmartModalService


    ) { }

    tableTemp:any = {
      productName:"",
      quantity:"",
      mobNo:""
    }  
    products= [
      "aneee",
      "selva",
      "wertyuytr",
      "sdfghjk",
      "sdfghjk",
      "sdfghuio",
    ]
    tabletDetails:any  =[
        {
          productName:"",
          quantity:"",
          mobNo:""
        }
      ]
        
    ngOnInit(): void {
     
      
    }
     
    orderDetails(){
    
        for(var i=0;i<this.tabletDetails.length;i++){
          console.log(this.tabletDetails[i],'aneeshkumar')
        }
        
    }
   
    addMore(){
      this.tabletDetails.push(this.tableTemp)
      this.tableTemp={}
            console.log('anee')
  
    }
    delete(index){
      // this.tabletDetails.pop()
      this.tabletDetails.splice(index, 1);

    }
      public selected(value: any): void {
        console.log('Selected value is: ', value);
      }
    
      public removed(value: any): void {
        console.log('Removed value is: ', value);
      }
    
      public refreshValue(value: any): void {
        this.value = value;
      }
 

}




HTM- ---------------file


<div class="row">
  <div class="col-md-3 animated fadeIn">
    <div class="card card-block tip-card">
      <div class="tip-msg">
        <h3>Today Orders</h3>
        <span>45</span>
      </div>
      <button class="tip-ico tip-ico-primary">
        <i class="fa fa-calendar fa-fw"></i>
      </button>
    </div>
  </div>
  <div class="col-md-3 animated fadeIn">
    <div class="card card-block tip-card">
      <div class="tip-msg">
        <h3>Pending</h3>
        <span>20</span>
      </div>
      <button class="tip-ico tip-ico-info">
        <i class="fa fa-truck fa-fw"></i>
      </button>
    </div>
  </div>
  <div class="col-md-3 animated fadeIn">
    <div class="card card-block tip-card">
      <div class="tip-msg">
        <h3>Target</h3>
        <span>2</span>
      </div>
      <button class="tip-ico tip-ico-success">
        <i class="fa fa-envelope fa-fw"></i>
      </button>
    </div>
  </div>
  <div class="col-md-3 animated fadeIn">
    <div class="card card-block tip-card">
      <div class="tip-msg">
        <h3>Total Orders</h3>
        <span>300</span>
      </div>
      <button class="tip-ico tip-ico-danger">
        <i class="fa fa-plus fa-fw"></i>
      </button>
    </div>
  </div>

  <div class="col-md-12">
    <card cardTitle="New Order">
        <div class="col-md-12">
          <div class="panel panel-primary">
            <div class="panel-heading">
              <h3 class="panel-title">Order Now</h3>
            </div>              
            <table class="table table-hover table-responsive" >
              <thead>
                <tr>
                  <th>No</th>
                  <th>Product Name</th>
                  <th>Quantity</th>
                  <th>Contact No</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <tr *ngFor='let prod of tabletDetails,let i=index,'>
                  <td>{{i+1}}</td>
                  <td>
                    <div class="form-group">
                      
                        <!-- <type-ahead  [suggestions]="products" class="form-control1" placeholder="Type Product Name" name={{prod.productName}}
                        [(ngModel)]='prod.productName'> -->
                            <input type="text" class="form-control"  placeholder="Type Product Name" name={{prod.productName}}
                            [(ngModel)]='prod.productName'>
                        <!-- </type-ahead> -->
                    </div>

                  <td>
                    <div class="form-group">
                      <input type="number"  class="form-control" placeholder="1" value="0" min="1" name={{prod.quantity}}
                        [(ngModel)]='prod.quantity'onkeydown="return event.keyCode === 8 || event.keyCode === 46 ? true : !isNaN(Number(event.key))">
                    </div>
                  </td>
                  <td>
                    <div class="form-group">
                    <input type="number"  class="form-control"  placeholder="1" value="0" min="1" name={{prod.mobNo
                      [(ngModel)]='prod.mobNo'>
                  </div></td>
                  <td>
                      <a class="delete" title="Delete" (click)='delete(i)'><i class="fa fa-trash" aria-hidden="true"></i> </a>
                  </td>
                </tr>
                <tr>
                  <td colspan="5">
                  <div class="addPlace pull-right">
                    <button type="button" class="btn btn-info add-new addPlace"  (click)='addMore()'><i class="fa fa-plus"></i> Add New</button>
                    <button type="submit" class="btn btn-success" (click)='orderDetails()'>Place Order</button>
                      </div>
                    </td>
                </tr>
              </tbody>
            </table>
            
          </div>
        </div>
      </card>
  </div>





</div>









scss -----------file



@import "../../../shared/theme/conf";
.tip-card {
    padding: 10px;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    .tip-msg {
        flex: 1;
        h3 {
            line-height: 0;
            margin-bottom: 20px;
        }
        span {
            color: rgba($fonts-color, .6);
            font-size: $default-text;
        }
    }
    .tip-ico {
        margin: 0 10px;
        border-radius: 3px;
        color: $white;
        @include center(60px, 60px);
        font-size: 30px;
        border: none;
        outline: none;
        &:active {
            @include box-shadow( 0 2px 10px 0 rgba($black, .4) inset);
        }
    }
    .tip-ico-primary {
        @extend .bg-primary;
        @include box-shadow( 0 2px 10px 0 rgba($primary, .5));
    }
    .tip-ico-success {
        @extend .bg-success;
        @include box-shadow( 0 2px 10px 0 rgba($success, .5));
    }
    .tip-ico-danger {
        @extend .bg-danger;
        @include box-shadow( 0 2px 10px 0 rgba($danger, .5));
    }
    .tip-ico-warning {
        @extend .bg-warning;
        @include box-shadow( 0 2px 10px 0 rgba($warning, .5));
    }
    .tip-ico-info {
        @extend .bg-info;
        @include box-shadow( 0 2px 10px 0 rgba($info, .5));
    }
}

.form-group {
    .form-control,
    .check-label {
        margin: 10px 0;
    }
}

.form-inline {
    .control-label,
    .form-control,
    .btn {
        margin: auto 5px;
    }
}


.table-title .add-new i {
    margin-right: 4px;
}
table.table {
    table-layout: fixed;
}
table.table tr th, table.table tr td {
    border-color: #e9e9e9;
}
table.table th i {
    font-size: 13px;
    margin: 0 5px;
    cursor: pointer;
}
table.table th:last-child {
    width: 100px;
}
table.table td a {
    cursor: pointer;
    display: inline-block;
    margin: 0 5px;
    min-width: 24px;
}    
table.table td a.add {
    color: #27C46B;
}
table.table td a.edit {
    color: #FFC107;
}
table.table td a.delete {
    color: #E34724;
}
table.table td i {
    font-size: 19px;
}
table.table td a.add i {
    font-size: 24px;
    margin-right: -1px;
    position: relative;
    top: 3px;
}    
table.table .form-control {
    height: 32px;
    line-height: 32px;
    box-shadow: none;
    border-radius: 2px;
}
table.table .form-control.error {
    border-color: #f50000;
}
table.table td .add {
    display: none;
}

.addPlace {
    margin: 5px;
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}


